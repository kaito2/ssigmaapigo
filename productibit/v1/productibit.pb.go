// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssigmaapi/productibit/v1/productibit.proto

package productibit

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	useractivity "github.com/kaito2/ssigmaapigo/type/useractivity"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SensorMessage struct {
	Uid                  string                       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Activities           []*useractivity.UserActivity `protobuf:"bytes,2,rep,name=activities,proto3" json:"activities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SensorMessage) Reset()         { *m = SensorMessage{} }
func (m *SensorMessage) String() string { return proto.CompactTextString(m) }
func (*SensorMessage) ProtoMessage()    {}
func (*SensorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7456e82fc2ccc167, []int{0}
}

func (m *SensorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorMessage.Unmarshal(m, b)
}
func (m *SensorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorMessage.Marshal(b, m, deterministic)
}
func (m *SensorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorMessage.Merge(m, src)
}
func (m *SensorMessage) XXX_Size() int {
	return xxx_messageInfo_SensorMessage.Size(m)
}
func (m *SensorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SensorMessage proto.InternalMessageInfo

func (m *SensorMessage) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *SensorMessage) GetActivities() []*useractivity.UserActivity {
	if m != nil {
		return m.Activities
	}
	return nil
}

func init() {
	proto.RegisterType((*SensorMessage)(nil), "ssigmaapi.productibit.v1.SensorMessage")
}

func init() {
	proto.RegisterFile("ssigmaapi/productibit/v1/productibit.proto", fileDescriptor_7456e82fc2ccc167)
}

var fileDescriptor_7456e82fc2ccc167 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xbf, 0xfd, 0x16, 0x04, 0x57, 0x05, 0x09, 0x22, 0x21, 0x7a, 0xa8, 0xbd, 0x58, 0x3c,
	0xcc, 0x92, 0x78, 0x11, 0xf5, 0xa2, 0xe0, 0x51, 0xd0, 0x96, 0x7a, 0xf0, 0x22, 0x9b, 0x64, 0x5c,
	0x07, 0x1b, 0x67, 0xd9, 0x1f, 0x81, 0xfe, 0xf7, 0x92, 0xa6, 0x6d, 0xa2, 0xe0, 0x6d, 0x1f, 0x33,
	0xfb, 0xde, 0xfb, 0x8c, 0xb8, 0x70, 0x8e, 0x74, 0xa5, 0x94, 0x21, 0x69, 0x2c, 0x97, 0xa1, 0xf0,
	0x94, 0x93, 0x97, 0x75, 0xda, 0x97, 0x60, 0x2c, 0x7b, 0x8e, 0xe2, 0xed, 0x2e, 0xf4, 0x87, 0x75,
	0x9a, 0x9c, 0x75, 0x2e, 0x7e, 0x69, 0x50, 0x06, 0x87, 0x56, 0x15, 0x9e, 0x6a, 0xf2, 0xcb, 0xf6,
	0x73, 0x72, 0xa2, 0x99, 0xf5, 0x02, 0xe5, 0x4a, 0xe5, 0xe1, 0x5d, 0x62, 0x65, 0x36, 0xc3, 0xf1,
	0x9b, 0x38, 0x98, 0xe1, 0x97, 0x63, 0xfb, 0x88, 0xce, 0x29, 0x8d, 0xd1, 0xa1, 0x18, 0x06, 0x2a,
	0xe3, 0xc1, 0x68, 0x30, 0xd9, 0x9d, 0x36, 0xcf, 0xe8, 0x56, 0x88, 0xb5, 0x23, 0xa1, 0x8b, 0xff,
	0x8f, 0x86, 0x93, 0xbd, 0xec, 0x14, 0xba, 0x46, 0x4d, 0x2e, 0xcc, 0x1d, 0xda, 0xbb, 0x75, 0xee,
	0xb4, 0xb7, 0x9f, 0x91, 0x38, 0x7a, 0xea, 0x2a, 0xcf, 0xd0, 0xd6, 0x54, 0xe0, 0x4b, 0x1a, 0x3d,
	0x8b, 0xfd, 0xb9, 0x59, 0xb0, 0x2a, 0xdb, 0xf8, 0xe8, 0x1c, 0xfe, 0x62, 0x84, 0x1f, 0x05, 0x93,
	0x63, 0x68, 0x79, 0x60, 0xc3, 0x03, 0x0f, 0x0d, 0xcf, 0xf8, 0xdf, 0xfd, 0xf5, 0xeb, 0x95, 0x26,
	0xff, 0x11, 0x72, 0x28, 0xb8, 0x92, 0x9f, 0x8a, 0x3c, 0x67, 0x72, 0xeb, 0xaa, 0xf9, 0xd7, 0x9d,
	0x6f, 0x7a, 0x32, 0xdf, 0x59, 0xb9, 0x5d, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x87, 0x56,
	0xa6, 0x96, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductibitServiceV1Client is the client API for ProductibitServiceV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductibitServiceV1Client interface {
	UploadSensor(ctx context.Context, in *SensorMessage, opts ...grpc.CallOption) (*empty.Empty, error)
}

type productibitServiceV1Client struct {
	cc *grpc.ClientConn
}

func NewProductibitServiceV1Client(cc *grpc.ClientConn) ProductibitServiceV1Client {
	return &productibitServiceV1Client{cc}
}

func (c *productibitServiceV1Client) UploadSensor(ctx context.Context, in *SensorMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ssigmaapi.productibit.v1.ProductibitServiceV1/UploadSensor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductibitServiceV1Server is the server API for ProductibitServiceV1 service.
type ProductibitServiceV1Server interface {
	UploadSensor(context.Context, *SensorMessage) (*empty.Empty, error)
}

func RegisterProductibitServiceV1Server(s *grpc.Server, srv ProductibitServiceV1Server) {
	s.RegisterService(&_ProductibitServiceV1_serviceDesc, srv)
}

func _ProductibitServiceV1_UploadSensor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductibitServiceV1Server).UploadSensor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssigmaapi.productibit.v1.ProductibitServiceV1/UploadSensor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductibitServiceV1Server).UploadSensor(ctx, req.(*SensorMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductibitServiceV1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ssigmaapi.productibit.v1.ProductibitServiceV1",
	HandlerType: (*ProductibitServiceV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadSensor",
			Handler:    _ProductibitServiceV1_UploadSensor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ssigmaapi/productibit/v1/productibit.proto",
}
